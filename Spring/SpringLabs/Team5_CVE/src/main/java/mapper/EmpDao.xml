<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  
KET POINT
1. Mybatis Mapper 작업시

1.1 mapper namespace="" 명은 DAO의 인터페이스와 동일하게 약속
1.2 DAO인터페이스 와 mapper 동기화 (함수명과  <select id="" 동일)
1.3 interface 와 mapper 만 있으면 DB작업
	//게시물 개수
	int getCount(String field, String query) throws ClassNotFoundException, SQLException;
    >>parameter  하나 이상이면 Map 사용 ...하자...

	//전체 게시물
	List<Notice> getNotices(int page, String field, String query) throws ClassNotFoundException, SQLException;
	
	//게시물 삭제
	int delete(String seq) throws ClassNotFoundException, SQLException;
	
	//게시물 수정
	int update(Notice notice) throws ClassNotFoundException, SQLException;
	
	//게시물 상세
	Notice getNotice(String seq) throws ClassNotFoundException, SQLException;
	
	//게시물 입력
	 int insert(Notice n) throws ClassNotFoundException, SQLException; 

	<insert id="" parameterType="vo.Notice">
		INSERT INTO NOTICES(SEQ, TITLE, CONTENT, WRITER, REGDATE, HIT, FILESRC , FILESRC2) 
		VALUES( (SELECT MAX(TO_NUMBER(SEQ))+1 FROM NOTICES), #{title}, #{content}, 'kosauser', SYSDATE, 0, #{fileSrc},#{fileSrc})
	</insert>
-->
<mapper namespace="dao.EmpDao" >
	<!-- 
	int getCount(String field, String query)
	1. parameter 1개  :  생략 or parameterType="int"
	2. parameter DTO :   parameterType="vo.notice"
	3. parameter DTO 아니고 2개 이상인 경우
	3.1 hashMap >> map.put(key,value) >> parameterType="hashMap" 권장
	3.2 mybatis parameter read 할때 : param1 , param2 , param3 >> 키워드 제공	
	
	
    ex)int getCount(String field, String query)
    param1 >> String field
    param2 >> String query
	 -->



	<select id="getEmp" resultType="vo.Emp" >
		SELECT * FROM EMP
	</select>
	
	 <select id = "getEmpByEmpno" resultType="vo.Emp">
	 	SELECT * FROM EMP WHERE EMPNO=#{empno}
	 </select>
	 
	<insert id="insert" parameterType="vo.Emp" >
		INSERT INTO EMP(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM , DEPTNO) 
		VALUES(#{empno}, #{ename}, #{job}, #{mgr}, SYSDATE, #{sal}, #{comm},#{deptno})
	</insert>
	 
	 
	<update id="update" parameterType="vo.Emp" >
		UPDATE EMP
		SET ENAME   = #{ename} ,
		    JOB = #{job} , 
		    SAL = #{sal} ,
		    COMM = #{comm},
		    MGR = #{mgr}
		WHERE EMPNO = #{empno}
	</update>
	 
	 
	<delete id="delete" >
		DELETE EMP WHERE EMPNO=#{empno}
	</delete>
	

	
	
	
</mapper>

