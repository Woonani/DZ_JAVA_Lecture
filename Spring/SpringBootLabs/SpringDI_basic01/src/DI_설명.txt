DI 개념 : 의존성 주입 (의존객체의 주소를 전달하는 것) Dependency Injection

프로젝트 >> 수 많은 클래스 생성 >> 클래스들 간의 관계 성립 

1. 상속 (is ~ a)
2. 포함 (has ~ a)

A 라는 클래스는 B라는 클래스가 필요해

프로그래밍적인 사고 (A는 B의 자원을 사용하겠다)

# 방법1------------------------
class A extends B

# 방법2------------------------
class A {
	B b = new B();
}
main > A a = new A(); a.b.자원
----------------

class A {
	B b;
	A(){
		b = new B(); // 초기화 생성자 // 복합
	}
}
main > A a = new A(); a.b.자원
----------------

class A {
	B b;
	A(B b){
		this.b = b; // 초기화 생성자 // 복합
	}
}
main > B b = new B();    A a = new A(b); 
----------------
class A {
	B b;
	A() {}
	
	void setB(B b){ // 함수로 만들면 강제성이 없음 : A쓰다가 갑자기 b필요할때 setter함수를 통해 주입해서 사용
		this.b = b;
	}
}
main > A a = new A() 놀다가 .... 필요하면  B b = new B(); a.setB(b);
-------------------
예제에서 나는 니가 필요해 (나는 너의 주소가 필요해)
NewRecordView 클래스는 NewRecord에 의존한다 ( 포괄적인 ... 필요해)
-------------------
DI (의존성 주입 ) : Spring 학습 처음 나오는 개념
result : 필요한 객체의 주소를 [생성자]를 통해서 또는 [setter] 함수를 통해서 주입 받겠다..

>>> 스프링에서는 constructor injection과 setter injection을 자동화 할 것임.
